name: Build SatComm-Prod
on:
  workflow_dispatch:
    inputs:
      deploy-branch:
        required: true
        default: "master"
        description: Choose SatComm branch to build
env:
  DOCKER_REGISTRY: "prod-registry.safee.com"
  DOCKER_IMAGE_NAME: "satcomm"
  DOCKER_IMAGE_TAG_TEXT: "prod"
  MSTEAMS_WEBHOOK: "https://nurdernek.webhook.office.com/webhookb2/34cbc660-6cf1-43fe-b032-6ed7abd0f581@758b3098-b6f6-42ba-8309-6fb195e54bd5/IncomingWebhook/2cb79ddcab184f83b7f3a6abceba501d/b970ad1a-f46c-44ef-bda4-24c42eba2347/V2uME8lonYsh4EsLxF4mehcUOeIfCoDIXOy3AZPszg36w1"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        repository: "UgaritTech/SatComm"
        token: ${{ secrets.PAT_TOKEN }}
        ref: ${{github.event.inputs.deploy-branch}}
        path: satcomm

    - uses: actions/setup-java@v3
      with:
        distribution: 'corretto'
        java-version: '11'

    - name: Set up Maven
      uses: stCarolas/setup-maven@v4.5
      with:
        maven-version: 3.6.3

    - name: Build SatComm
      run: mvn -f satcomm/pom.xml clean install -DskipTests
    - name: Get latest releast tag and build timestamp
      run: |
        echo "LATEST_RELEASE_TAG=$(curl --silent -u sre-ugarit:${{ secrets.PAT_TOKEN }} https://api.github.com/repos/UgaritTech/SatComm/tags | jq -r '.[0].name')" >> $GITHUB_ENV
        echo "BUILD_TIMESTAMP=$(date '+%Y%m%d%H%M%S')" >> $GITHUB_ENV

    - name: Login to Safee Private Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.DOCKER_REGISTRY }}
        username: sre
        password: ${{ secrets.REGISTRY_PASS }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push SatComm Docker image
      id: docker_build
      uses: docker/build-push-action@v5
      with:
        context: ${{ env.DOCKER_IMAGE_NAME }}
        push: true
        tags: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_NAME }},${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.LATEST_RELEASE_TAG }},${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.LATEST_RELEASE_TAG }}-${{ env.BUILD_TIMESTAMP }}
        cache-from: type=registry,ref=${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:buildcache
        cache-to: type=registry,ref=${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:buildcache,mode=max

    - uses: neonidian/teams-notify-build-status@v3
      with:
        webhookUrl: ${{ env.MSTEAMS_WEBHOOK }}
        title: ${{ env.DOCKER_IMAGE_NAME }} - Prod
        status: ${{ job.status }}
        message: |
          ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.LATEST_RELEASE_TAG }}-${{ env.BUILD_TIMESTAMP }}@${{ steps.docker_build.outputs.digest }}
          
          ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.LATEST_RELEASE_TAG }}@${{ steps.docker_build.outputs.digest }}

          ${{ env.DOCKER_IMAGE_NAME }} built successfully.
          
          Branch: ${{github.event.inputs.deploy-branch}}.

          Docker image ID: ${{ steps.docker_build.outputs.imageid }}.

          Docker image digest: ${{ steps.docker_build.outputs.digest }}.

          Docker image latest release tag: ${{ env.LATEST_RELEASE_TAG }}.

          Timestamp: ${{ env.BUILD_TIMESTAMP }}.
      env:
        SHOULD_DISPLAY_ACTOR_LABEL: true
        SHOULD_DISPLAY_VIEW_RUN_BUTTON: true
        SHOULD_DISPLAY_VIEW_COMMIT_BUTTON: true