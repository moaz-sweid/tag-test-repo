name: Build Wasl Service-Prod
on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      deploy-branch:
        required: true
        default: "master"
        description: Choose Wasl branch to build
      release-tag-prefix:
        required: false
        default: "prod"
        description: Add release tag prefix

  push:
    tags:
      - "*"

env:
  DOCKER_REGISTRY: "prod-registry.safee.com"
  DOCKER_IMAGE_NAME: "wasl"
  DOCKER_IMAGE_TAG_TEXT: "latest"
  MSTEAMS_WEBHOOK: "https://nurdernek.webhook.office.com/webhookb2/34cbc660-6cf1-43fe-b032-6ed7abd0f581@758b3098-b6f6-42ba-8309-6fb195e54bd5/IncomingWebhook/2cb79ddcab184f83b7f3a6abceba501d/b970ad1a-f46c-44ef-bda4-24c42eba2347/V2uME8lonYsh4EsLxF4mehcUOeIfCoDIXOy3AZPszg36w1"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        repository: "UgaritTech/wasl-service"
        token: ${{ secrets.PAT_TOKEN }}
        fetch-depth: 0
        ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.deploy-branch || github.ref }}
        path: wasl

    - name: Set up Java 11 (Corretto)
      uses: actions/setup-java@v3
      with:
        distribution: 'corretto'
        java-version: '11'

    - name: Set up Maven
      uses: stCarolas/setup-maven@v4.5
      with:
        maven-version: 3.6.3

    - name: Install JMS connector
      run: |
        mvn install:install-file \
          -Dfile="wasl/Artifacts/jm-connector-6.10.jar" \
          -DgroupId="tech.ugarit" -DartifactId="jm-connector" \
          -Dversion="6.10" -Dpackaging="jar"

    - name: Build integration modules
      run: |
        mvn -f wasl/wasl-integration-model/pom.xml clean install
        mvn -f wasl/wasl-integration-management/pom.xml clean install -DskipTests

    - name: Get latest tag
      id: get-latest-tag
      uses: WyriHaximus/github-action-get-previous-tag@v1
      with:
        workingDirectory: 'wasl'

    - name: Export LATEST_TAG and BUILD_TIMESTAMP
      run: |
        echo "LATEST_TAG=${{ steps.get-latest-tag.outputs.tag }}" >> $GITHUB_ENV
        echo "BUILD_TIMESTAMP=$(date '+%Y%m%d%H%M%S')" >> $GITHUB_ENV

    - name: Login to Safee Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.DOCKER_REGISTRY }}
        username: sre
        password: ${{ secrets.REGISTRY_PASS }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push Wasl Docker image
      id: docker_build
      uses: docker/build-push-action@v5
      with:
        context: wasl
        push: true
        tags: |
          ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG_TEXT }}
          ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.event.inputs.release-tag-prefix }}-${{ env.LATEST_TAG }}
          ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_TAG_TEXT }}-${{ env.BUILD_TIMESTAMP }}
          ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.event.inputs.release-tag-prefix }}-${{ env.LATEST_TAG }}-${{ env.BUILD_TIMESTAMP }}
        cache-from: type=registry,ref=${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:buildcache
        cache-to: type=registry,ref=${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:buildcache,mode=max

    - name: Prepare Hazelcast jars
      run: |
        mvn -f wasl/wasl-integration-model/pom.xml clean compile jar:jar
        mvn -f wasl/wasl-integration-management/pom.xml clean compile jar:jar
        cp wasl/wasl-integration-model/target/wasl-integration-model-*.jar wasl/wasl-integration-cache/
        cp wasl/wasl-integration-management/target/wasl-integration-*.jar wasl/wasl-integration-cache/

    - name: Build and push Wasl Cache Docker image
      id: docker_build_hz
      uses: docker/build-push-action@v5
      with:
        context: wasl/wasl-integration-cache
        push: true
        tags: |
          ${{ env.DOCKER_REGISTRY }}/wasl-integration-cache:${{ env.DOCKER_IMAGE_TAG_TEXT }}
          ${{ env.DOCKER_REGISTRY }}/wasl-integration-cache:${{ github.event.inputs.release-tag-prefix }}-${{ env.LATEST_TAG }}
          ${{ env.DOCKER_REGISTRY }}/wasl-integration-cache:${{ github.event.inputs.release-tag-prefix }}-${{ env.LATEST_TAG }}-${{ env.BUILD_TIMESTAMP }}
        cache-from: type=registry,ref=${{ env.DOCKER_REGISTRY }}/wasl-integration-cache:buildcache
        cache-to: type=registry,ref=${{ env.DOCKER_REGISTRY }}/wasl-integration-cache:buildcache,mode=max

    - name: Send Teams notification
      uses: neonidian/teams-notify-build-status@v3
      with:
        webhookUrl: ${{ env.MSTEAMS_WEBHOOK }}
        title: ${{ env.DOCKER_IMAGE_NAME }} - Prod
        status: ${{ job.status }}
        message: |
          Wasl Cache: ${{ env.DOCKER_REGISTRY }}/wasl-integration-cache:${{ github.event.inputs.release-tag-prefix }}-${{ env.LATEST_TAG }}-${{ env.BUILD_TIMESTAMP }}@${{ steps.docker_build_hz.outputs.digest }}
          Wasl Service: ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.event.inputs.release-tag-prefix }}-${{ env.LATEST_TAG }}-${{ env.BUILD_TIMESTAMP }}@${{ steps.docker_build.outputs.digest }}

          ${{ env.DOCKER_IMAGE_NAME }} built successfully.
          Branch/Tag: ${{ github.ref_name }}
          Latest Tag: ${{ env.LATEST_TAG }}
          Timestamp: ${{ env.BUILD_TIMESTAMP }}
      env:
        SHOULD_DISPLAY_ACTOR_LABEL: true
        SHOULD_DISPLAY_VIEW_RUN_BUTTON: true
        SHOULD_DISPLAY_VIEW_COMMIT_BUTTON: true
